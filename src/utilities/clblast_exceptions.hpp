
// =================================================================================================
// This file is part of the CLBlast project. Author(s):
//   Ivan Shapovalov <intelfx@intelfx.name>
//
// This file implements the exception hierarchy for CLBlast. It contains classes for exceptions
// generated by different parts of CLBlast (e.g. OpenCL API calls, internal logic, semantic BLAS
// errors).
//
// =================================================================================================

#ifndef CLBLAST_EXCEPTIONS_H_
#define CLBLAST_EXCEPTIONS_H_

#include "utilities/utilities.hpp"

namespace clblast {
// =================================================================================================

// Represents a semantic error in BLAS function arguments
class BLASError : public ErrorCode<Error<std::invalid_argument>, StatusCode> {
 public:
  explicit BLASError(StatusCode status, const std::string& subreason = std::string{});
};
// =================================================================================================

// Represents a runtime error generated by internal logic
class RuntimeErrorCode : public ErrorCode<RuntimeError, StatusCode> {
 public:
  explicit RuntimeErrorCode(StatusCode status, const std::string& subreason = std::string{});
};

// =================================================================================================

// Handles (most of the) runtime exceptions and converts them to StatusCode
StatusCode DispatchException(bool silent = false);
StatusCode DispatchExceptionCatchAll(bool silent = false);

// Handles remaining exceptions and converts them to StatusCode::kUnhandledError
StatusCode DispatchExceptionForC();

// =================================================================================================

}  // namespace clblast

#endif  // CLBLAST_EXCEPTIONS_H_
